name: Go Multi-Platform Build & Release

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]  # Triggers when a version tag (e.g., v1.0.0) is pushed
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Set environment variables
        run: echo "OUTPUT_NAME=myapp-${{ matrix.os }}-${{ matrix.arch }}" >> $GITHUB_ENV
        shell: bash

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          mkdir -p dist/${{ matrix.os }}-${{ matrix.arch }}
          output="dist/${{ matrix.os }}-${{ matrix.arch }}/"
      
          go build -o "$output" ./...
      
      - name: Package as ZIP
        run: |
          cd dist
          zip -r myapp-${{ matrix.os }}-${{ matrix.arch }}.zip myapp-${{ matrix.os }}-${{ matrix.arch }}*
          cd ..

      - name: Upload ZIP Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: myapp-${{ matrix.os }}-${{ matrix.arch }}.zip
          path: dist/myapp-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')  # Only run on version tags
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download ZIP Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: List files
        run: ls -R dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "## Changes in this release\n\n- Auto-generated release from GitHub Actions"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
